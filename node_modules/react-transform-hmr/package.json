{
  "name": "react-transform-hmr",
  "version": "1.0.1",
  "description": "A React Transform that enables hot reloading React classes using Hot Module Replacement API",
  "main": "lib/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gaearon/react-transform-hmr.git"
  },
  "author": {
    "name": "Dan Abramov",
    "email": "dan.abramov@me.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gaearon/react-transform-hmr/issues"
  },
  "homepage": "https://github.com/gaearon/react-transform-hmr#readme",
  "scripts": {
    "clean": "rimraf lib",
    "build": "babel src --out-dir lib",
    "prepublish": "npm run clean && npm run build"
  },
  "keywords": [
    "react-transform",
    "react",
    "reactjs",
    "webpack",
    "hmr",
    "live",
    "edit",
    "hot",
    "reload",
    "rhl",
    "dx"
  ],
  "dependencies": {
    "global": "^4.3.0",
    "react-proxy": "^1.1.1"
  },
  "devDependencies": {
    "babel": "^5.8.23",
    "rimraf": "^2.4.3"
  },
  "readme": "# react\n\nA [React Transform](https://github.com/gaearon/babel-plugin-react-transform) that enables hot reloading React classes using Hot Module Replacement API. Hot module replacement is [supported natively by Webpack](http://webpack.github.io/docs/hot-module-replacement-with-webpack.html) and available in Browserify with [browserify-hmr](https://github.com/AgentME/browserify-hmr).\n\n## Installation\n\nFirst, install the [Babel plugin](https://github.com/gaearon/babel-plugin-react-transform):\n\n```\nnpm install --save-dev babel-plugin-react-transform\n```\n\nThen, install the transform:\n\n```\nnpm install --save-dev react-transform-hmr\n```\n\n### React\n\nEdit your `.babelrc` to include `extra.babel-plugin-react-transform`.  \nIt must be an array of the transforms you want to use:\n\n```js\n{\n  \"stage\": 0,\n  \"env\": {\n    // only enable it when process.env.NODE_ENV is 'development' or undefined\n    \"development\": {\n      \"plugins\": [\"react-transform\"],\n      \"extra\": {\n        // must be defined and be an object\n        \"react-transform\": {\n          \"transforms\": [{\n            \"transform\": \"react-transform-hmr\",\n            // if you use React Native, pass \"react-native\" instead:\n            \"imports\": [\"react\"],\n            // this is important for Webpack HMR:\n            \"locals\": [\"module\"]\n          }]\n          // note: you can put more transforms into array\n          // this is just one of them!\n        }\n      }\n    }\n  }\n}\n```\n\nMake sure you process files with `babel-loader`, and that you *don’t* use React Hot Loader (it’s not needed with this transform).\n\n**It is up to you to ensure that the transform is not enabled when you compile the app in production mode.** The easiest way to do this is to put React Transform configuration inside `env.development` in `.babelrc` and ensure you’re calling `babel` with `NODE_ENV=production`. See [babelrc documentation](https://babeljs.io/docs/usage/babelrc/#env-option) for more details about using `env` option.\n\n### React Native\n\nThis transform enables hot reloading when used together with [React Native Webpack Server](https://github.com/mjohnston/react-native-webpack-server). **However note that you should not use `.babelrc` to configure it with React Native.** Otherwise you’ll get [`Uncaught SyntaxError: Unexpected reserved word` in `ActivityIndicatorIOS.ios.js`](https://github.com/mjohnston/react-native-webpack-server/issues/57#issuecomment-141487449).\n\nThere are two problems why `.babelrc` doesn’t work well in React Native:\n\n* Changes in it [aren’t picked up by packager’s agressive caching](https://github.com/mjohnston/react-native-webpack-server/issues/63).\n* Some other problem (I don’t know what it is) causes `import` generated by `babel-plugin-react-transform` to not be compiled into a `require` call.\n\nUntil we have better `.babelrc` support in React Native, **you should configure React Transform together with `babel-loader`**:\n\n```js\nvar fs = require('fs');\nvar path = require('path');\nvar webpack = require('webpack');\n\nvar config = {\n  debug: true,\n\n  devtool: 'source-map',\n\n  entry: {\n    'index.ios': ['./src/main.js'],\n  },\n\n  output: {\n    path: path.resolve(__dirname, 'build'),\n    filename: '[name].js',\n  },\n\n  module: {\n    loaders: [{\n      test: /\\.js$/,\n      exclude: /node_modules/,\n      loader: 'babel',\n      query: {\n        stage: 0,\n        plugins: []\n      }\n    }]\n  },\n\n  plugins: []\n};\n\n// Hot mode\nif (process.env.HOT) {\n  config.devtool = 'eval';\n  config.entry['index.ios'].unshift('react-native-webpack-server/hot/entry');\n  config.entry['index.ios'].unshift('webpack/hot/only-dev-server');\n  config.entry['index.ios'].unshift('webpack-dev-server/client?http://localhost:8082');\n  config.output.publicPath = 'http://localhost:8082/';\n  config.plugins.unshift(new webpack.HotModuleReplacementPlugin());\n\n  // Note: enabling React Transform and React Transform HMR:\n\n  config.module.loaders[0].query.plugins.push('react-transform');\n  config.module.loaders[0].query.extra = {\n    'react-transform': [{\n      target: 'react-transform-hmr',\n      imports: ['react-native'],\n      locals: ['module']\n    }]\n  };\n}\n\nif (process.env.NODE_ENV === 'production') {\n  config.plugins.push(new webpack.optimize.OccurrenceOrderPlugin());\n  config.plugins.push(new webpack.optimize.UglifyJsPlugin());\n}\n\nmodule.exports = config;\n```\n\nSee [React Native Webpack Server examples](https://github.com/mjohnston/react-native-webpack-server/tree/master/Examples/) for details.\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "react-transform-hmr@1.0.1",
  "_from": "react-transform-hmr@^1.0.0"
}
