{
  "name": "react-classname-module",
  "version": "0.1.1",
  "description": "Write CSS Modules painless with className and classnames()",
  "main": "./lib/index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/51seven/react-classname-module.git"
  },
  "scripts": {
    "watch": "babel src --watch --out-dir lib",
    "compile": "babel src --out-dir lib",
    "prepublish": "npm run compile",
    "test": "echo \"Error: no test specified, d'oh!\" && exit 1"
  },
  "keywords": [
    "react",
    "classnames",
    "css",
    "modules"
  ],
  "homepage": "https://github.com/51seven/react-classname-module",
  "bugs": {
    "url": "https://github.com/51seven/react-classname-module/issues"
  },
  "author": {
    "name": "timomeh",
    "email": "timo@51seven.de"
  },
  "license": "MIT",
  "dependencies": {
    "classnames": "^2.2.0",
    "react": "^0.14.3"
  },
  "devDependencies": {
    "babel-plugin-transform-object-rest-spread": "^6.1.18",
    "babel-preset-es2015": "^6.1.18",
    "babel-preset-react": "^6.1.18"
  },
  "readme": "# React Classname Module\n\n[![react-classname-module on npm](https://img.shields.io/npm/v/react-classname-module.svg)](https://www.npmjs.com/package/react-classname-module)\n\n**React Classname Module** allows you to write your classnames for [CSS Modules](https://github.com/css-modules/css-modules) as easy as without CSS Modules. It's build with [classnames](https://github.com/JedWatson/classnames), so you have a simple and powerful way to write your classnames.\n\n**Notice: This is currently in an early alpha stage**\n\n## Install\n\n`npm install --save react-classname-module`\n\n## How?\n\nSee this example. Yuck, it sucks!\n\n```JSX\nimport React from \"react\";\nimport styles from \"styles.css\";\n\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <div className={styles.head}>\n        <h1 className={styles[\"headline--h1\"]}>Lorem ipsum</h1>\n        <div className={styles.content}>\n          ...\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MyComponent;\n```\n\nWith **React Classname Module** you can simply write this nice little piece of code:\n\n```JSX\nimport React from \"react\";\nimport cm from \"react-classname-module\";\nimport styles from \"styles.css\";\n\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <div className=\"head\">\n        <h1 className=\"headline--h1\">Lorem ipsum</h1>\n        <div className=\"content\">\n          ...\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default cm(MyComponent, styles);\n```\n\nAnd that's it.\n\n## Features\n\n* Supports local and global classnames\n* Works with stateless Components\n* Works with multiple classes: `className=\"btn btn-highlight\"`\n* Works with [classnames](https://github.com/JedWatson/classnames)\n\n## Doesn't support (currently)\n\n* identical local and global classnames\n* merging `className` on a React Component:  \n  e.g. `<Foo className=\"bar\" />` will override the Components className with the CSS Module `\"bar\"`\n\n## Supporting classnames\n\nInstead of writing a string into classname, you can pass a typical [classnames](https://github.com/JedWatson/classnames) object into it.\n\n```JSX\nlet classnames = {\n  foo: true,\n  bar: true,\n  \"foo-bar\": false\n}\n\n<div className={classnames}></div>\n```\n\n## Changelog\n\n### v0.1.1\n\n* Fixed missing `defaultProps` and `propTypes` in stateless Components\n\n\n### v0.1.0\n\n* Removed silly dead code\n* Support for stateless components\n\n\n### v0.0.1\n\n* initial version\n",
  "readmeFilename": "README.md",
  "_id": "react-classname-module@0.1.1",
  "_from": "react-classname-module@~0.1.1"
}
