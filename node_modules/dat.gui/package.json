{
  "name": "dat.gui",
  "version": "0.6.1",
  "description": "A lightweight graphical user interface for changing variables in JavaScript.",
  "main": "index.js",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "node ./node_modules/eslint/bin/eslint.js src/",
    "build": "webpack --config ./webpack/webpack.config.js --devtool sourcemap && webpack --config ./webpack/webpack.config.min.js",
    "dev": "webpack --progress --colors --watch --config webpack/webpack.config.js --devtool sourcemap"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dataarts/dat.gui.git"
  },
  "author": {
    "name": "Data Arts Team, Google Creative Lab"
  },
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/dataarts/dat.gui/issues"
  },
  "homepage": "https://github.com/dataarts/dat.gui#readme",
  "devDependencies": {
    "babel-core": "^5.8.22",
    "babel-eslint": "^4.0.5",
    "babel-loader": "^5.3.2",
    "css-loader": "^0.16.0",
    "esdoc": "^0.2.1",
    "esdoc-es7-plugin": "0.0.1",
    "eslint": "^1.1.0",
    "eslint-config-airbnb": "0.0.7",
    "eslint-loader": "^1.0.0",
    "eslint-plugin-react": "^3.2.2",
    "extend": "^3.0.0",
    "html-loader": "^0.3.0",
    "node-sass": "^3.2.0",
    "sass-loader": "^2.0.0",
    "style-loader": "^0.12.3",
    "webpack": "^1.11.0"
  },
  "readme": "#dat.GUI\nA lightweight graphical user interface for changing variables in JavaScript. \n\nGet started with dat.GUI by reading the tutorial at http://workshop.chromeexperiments.com/examples/gui.\n\n----\n\n##Packaged Builds\nThe easiest way to use dat.GUI in your code is by using the built source at `build/dat.gui.min.js`. These built JavaScript files bundle all the necessary dependencies to run dat.GUI.\n\nIn your `head` tag, include the following code:\n```\n<script type=\"text/javascript\" src=\"dat.gui.main.js\"></script>\n```\n\n----\n\n\n##Directory Contents\n * build: Concatenated source code.\n * src: Modular code in [require.js](http://requirejs.org/) format. Also includes css, [scss](http://sass-lang.com/), and html, some of which is included during build.\n * tests: [QUnit](https://github.com/jquery/qunit) test suite.\n * utils: [node.js](http://nodejs.org/) utility scripts for compiling source.\n\n----\n\n##Building your own dat.GUI\n\nIn the terminal, enter the following:\n\n```\n$ npm run build\n```\n\nThis will create a namespaced, unminified build of dat.GUI at `build/dat.gui.main.js`\n\n----\n\n##Change log\n\n### 0.6.1\n * Fixed all eslint issues\n \n### 0.6.0\n * Using common.js\n * Using webpack for build\n * Fixed an issue with colors based on arrays - https://github.com/dataarts/dat.gui/pull/57\n * Update factory.js, Step param was not used - https://github.com/dataarts/dat.gui/pull/45\n \n### 0.5\n * Moved to requirejs for dependency management.\n * Changed global namespace from *DAT* to *dat* (lowercase).\n * Added support for color controllers. See [Color Controllers](http://workshop.chromeexperiments.com/examples/gui/#4--Color-Controllers).\n * Added support for folders. See [Folders](http://workshop.chromeexperiments.com/examples/gui/#3--Folders).\n * Added support for saving named presets.  See [Presets](http://workshop.chromeexperiments.com/examples/gui/examples/gui/#6--Presets).\n * Removed `height` parameter from GUI constructor. Scrollbar automatically induced when window is too short.\n * `dat.GUI.autoPlace` parameter removed. Use `new dat.GUI( { autoPlace: false } )`. See [Custom Placement](http://workshop.chromeexperiments.com/examples/gui/#9--Custom-Placement).\n * `gui.autoListen` and `gui.listenAll()` removed. See [Updating The Display Manually](http://workshop.chromeexperiments.com/examples/gui/#11--Updating-the-Display-Manually).\n * `dat.GUI.load` removed. See [Saving Values](http://workshop.chromeexperiments.com/examples/gui/#5--Saving-Values).\n * Made Controller code completely agnostic of GUI. Controllers can easily be created independent of a GUI panel.\n\n\n### 0.4\n\n * Migrated from GitHub to Google Code.\n\n----\n\n##Thanks\nThe following libraries / open-source projects were used in the development of dat.GUI:\n * [require.js](http://requirejs.org/)\n * [Sass](http://sass-lang.com/)\n * [node.js](http://nodejs.org/)\n * [QUnit](https://github.com/jquery/qunit) / [jquery](http://jquery.com/)",
  "readmeFilename": "README.md",
  "_id": "dat.gui@0.6.1",
  "dist": {
    "shasum": "886ae15f6ce9615dc06368b84980fd60c0cbd60c"
  },
  "_from": "dat.gui@",
  "_resolved": "https://registry.npmjs.org/dat.gui/-/dat.gui-0.6.1.tgz"
}
